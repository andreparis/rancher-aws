Description: >
    This template deploys a Lambda function that will generate the required config.yaml for 
    RKE to be able to manage the hosts of a working Rancher cluster.

Parameters:

    EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

    AutoScalingGroup:
      Description: The AutoScalingGroup that the EC2 cluster is deployed to
      Type: String

    KeyName:
      Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
      Type: String

    InstanceUser:
      Type: String
      Default: 'ec2-user'
      Description: Name of admin user for instance (ec2-user for example)

    FQDN:
      Type: String
      Description: Fully qualified URL for using app.  DNS of FQDN must be pointed to CNAME of ALB.

    rkeS3Bucket:
      Type: String
      Description: A reference to the S3 bucket for rke

    LambdaExecutionRole:
      Type: String
      Description: A reference to the lambda execution role

    rkeUserPem:
      Type: String
      Description: A reference to the PEM for rke-user

    rkeUserCrt:
      Type: String
      Description: A reference to the CRT for rke-user
    
Resources:

  NotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - 
          Endpoint: !GetAtt 
            - LifecycleExecuteRKE
            - Arn
          Protocol: lambda
    DependsOn: LifecycleExecuteRKE

  InstanceTerminatingHook:
    Type: 'AWS::AutoScaling::LifecycleHook'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DefaultResult: ABANDON
      HeartbeatTimeout: '900'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_TERMINATING'
      NotificationTargetARN: !Ref NotificationTopic
      RoleARN: !GetAtt 
        - AutoscalingNotificationRole
        - Arn
    DependsOn: NotificationTopic

  InstanceActivatingHook:
    Type: 'AWS::AutoScaling::LifecycleHook'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DefaultResult: CONTINUE
      HeartbeatTimeout: '900'
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
      NotificationTargetARN: !Ref NotificationTopic
      RoleARN: !GetAtt 
        - AutoscalingNotificationRole
        - Arn
    DependsOn: NotificationTopic

  AutoscalingNotificationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - autoscaling.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole'

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref LifecycleExecuteRKE
      Action: 'lambda:InvokeFunction'
      Principal: sns.amazonaws.com
      SourceArn: !Ref NotificationTopic

  LifecycleExecuteRKE:
    Type: 'AWS::Lambda::Function'
    Properties:
      Environment:
        Variables:
          CLUSTER: !Ref AutoScalingGroup
          KeyName: !Ref KeyName
          InstanceUser: !Ref InstanceUser
          rkeS3Bucket:  !Ref rkeS3Bucket
          FQDN: !Ref FQDN
          instancePEM: !Ref rkeUserPem
      Handler: rke.run
      Role: !Ref LambdaExecutionRole
      Code: 
        S3Bucket: !Ref rkeS3Bucket
        S3Key: 'S3initRKE.zip'
      Runtime: python3.6
      Timeout: 300

  ExecuteLifecycleExecuteRKE:
    Type: 'Custom::ExecuteLifecycleExecuteRKE'
    Properties:
      ServiceToken: !GetAtt LifecycleExecuteRKE.Arn
      Region: !Ref 'AWS::Region'