AWSTemplateFormatVersion: 2010-09-09
Description: 'Solodev ECS, EFS, ELB with Nginx Proxy'
Parameters:
  ClientName:
    Default: solodev
    Description: Name of client
    Type: String
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  KeyName:
    Default: ''
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  DesiredCapacity:
    Type: Number
    Default: '2'
    Description: Number of instances to launch in your ECS cluster
  AsgMaxSize:
    Type: Number
    Default: '4'
    Description: Maximum number of instances that can be launched in your ECS cluster
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of an existing subnets in the selected Virtual Private
      Cloud.
  WebServerPort:
    Description: TCP/IP port of the web server
    Type: String
    Default: '80'
  SSHFrom:
    Description: >-
      Lockdown SSH access to the bastion host (default can be accessed from
      anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: m3.medium
    AllowedValues:
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
Mappings:
  AWSRegionToAMI:
    us-east-1:
      AMI: ami-ba722dc0
    us-east-2:
      AMI: ami-832b0ee6
    us-west-1:
      AMI: ami-dd104dbd
    us-west-2:
      AMI: ami-022b9262
    eu-west-1:
      AMI: ami-a7f2acc1
    eu-west-2:
      AMI: ami-3fb6bc5b
    eu-central-1:
      AMI: ami-ec2be583
    ap-northeast-1:
      AMI: ami-c393d6a4
    ap-southeast-1:
      AMI: ami-a88530cb
    ap-southeast-2:
      AMI: ami-8af8ffe9
    ca-central-1:
      AMI: ami-ead5688e
Resources:

  FileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      FileSystemTags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - EFS
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f1bd72a6-f978-4bc8-8d41-8d75019b08f9

  MountTargetSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Security group for mount target
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '2049'
          ToPort: '2049'
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4ef0e39a-7233-4074-bcda-34f0a53e090e

  MountTarget1:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Select 
        - '0'
        - !Ref Subnets
      SecurityGroups:
        - !Ref MountTargetSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 920a3df0-cd9d-4073-b4db-2f440dbfcfe9
  MountTarget2:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Select 
        - '1'
        - !Ref Subnets
      SecurityGroups:
        - !Ref MountTargetSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2ed00e7d-0643-414e-9515-12c0c2daa98f
  MountTarget3:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Select 
        - '2'
        - !Ref Subnets
      SecurityGroups:
        - !Ref MountTargetSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c04539ff-c5d6-42a5-97e0-11ea9789d17e
  MountTarget4:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      SubnetId: !Select 
        - '3'
        - !Ref Subnets
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0c546c62-70f2-4006-901d-c994ce76acb5
  ELBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow inbound access to the ELB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - ELBSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 800ecf14-d4ac-4222-8d5c-6b3e518a0440
  ECSALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - ELB
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
      Subnets: !Ref Subnets
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1efd447b-6f38-4922-916b-5a6c091020f2
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    DependsOn: ECSServiceRole
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ECSTG
      Port: '80'
      Protocol: HTTP
    Metadata:
      'AWS::CloudFormation::Designer':
        id: da5818f9-d8ae-4169-8e23-0904ed772b92
  ECSALBListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    DependsOn:
      - ALBListener
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ECSTG
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Priority: 1
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b7f45d98-4116-46e8-9c22-bb003a831fd2
  ECSTG:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    DependsOn:
      - ECSALB
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '1860'
      Name: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - ECSTG
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b2ddf892-e9a3-49e5-a95b-0cb39f3cb91a
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - ECS
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bafee841-66f0-4839-8ef6-87599249f62f
  ECSAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    DependsOn:
      - MountTarget1
      - MountTarget2
      - MountTarget3
      - MountTarget4
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref ContainerInstances
      MinSize: '1'
      MaxSize: !Ref AsgMaxSize
      DesiredCapacity: !Ref DesiredCapacity
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - ECS-instance
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 13ed1c66-9990-4682-8605-88cba4cb6d73
  ContainerSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref ContainerSecurityGroup
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId: !Ref ContainerSecurityGroup
  ContainerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Associate this group with container instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHFrom
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref ELBSecurityGroup
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !Ref ELBSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: df096fd4-f28d-464a-b313-c6a938d0157f
  ContainerInstances:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          Install:
            - Install
        Install:
          packages:
            yum:
              nfs-utils: []
              python27: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource ContainerInstances '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
      'AWS::CloudFormation::Designer':
        id: d86a3e51-ef74-4f2a-9591-8c547b7bee6c
    Properties:
      ImageId: !FindInMap 
        - AWSRegionToAMI
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      KeyName: !Ref KeyName
      AssociatePublicIpAddress: true
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - echo ECS_CLUSTER=
            - !Ref ECSCluster
            - |2
               >> /etc/ecs/ecs.config
            - |
              yum install -y aws-cfn-bootstrap
            - /opt/aws/bin/cfn-init
            - '         --stack '
            - !Ref 'AWS::StackName'
            - ' '
            - '         --resource ContainerInstances '
            - '         --configsets Install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - |
              PATH=$PATH:/usr/local/bin
            - |
              yum update
            - >
              EC2_AVAIL_ZONE=`curl -s
              http://169.254.169.254/latest/meta-data/placement/availability-zone`
            - EC2_REGION=
            - !Ref 'AWS::Region'
            - |+

            - |
              mkdir /mnt/efs
            - EFS_FILE_SYSTEM_ID=
            - !Ref FileSystem
            - |+

            - >
              DIR_SRC=$EC2_AVAIL_ZONE.$EFS_FILE_SYSTEM_ID.efs.$EC2_REGION.amazonaws.com
            - |
              DIR_TGT=/mnt/efs
            - |
              touch /home/ec2-user/echo.res
            - |
              echo $EFS_FILE_SYSTEM_ID >> /home/ec2-user/echo.res
            - |
              echo $EC2_AVAIL_ZONE >> /home/ec2-user/echo.res
            - |
              echo $EC2_REGION >> /home/ec2-user/echo.res
            - |
              echo $DIR_SRC >> /home/ec2-user/echo.res
            - |
              echo $DIR_TGT >> /home/ec2-user/echo.res
            - |
              mount -t nfs4 $DIR_SRC:/ $DIR_TGT >> /home/ec2-user/echo.res
            - |
              cp -p /etc/fstab /etc/fstab.back-$(date +%F)
            - "echo -e \"$DIR_SRC:/ \t\t $DIR_TGT \t\t nfs \t\t defaults \t\t 0 \t\t 0\" | tee -a /etc/fstab\n"
            - |
              docker ps
            - |
              service docker stop
            - |
              service docker start
            - >
              sudo docker run --rm --privileged -v
              /var/run/docker.sock:/var/run/docker.sock -v
              /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.9
              http://rancher.solodev.net:8080/v1/scripts/96FE245BA7D6C830E167:1514678400000:DdnugUxYx8RVdSnB3mEpn9hxU
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource ECSAutoScalingGroup '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                  - 'ecs:Describe*'
                  - 'ecs:List*'
                Resource: '*'
      ManagedPolicyArns:
        - >-
          arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
    Metadata:
      'AWS::CloudFormation::Designer':
        id: aefca27b-ad7c-4b8d-8ed0-5680154ae9a1
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref EC2Role
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b34eab39-db6c-481b-9ede-c969e13b4c41
  ECSServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'elasticloadbalancing:Describe*'
                  - 'elasticloadbalancing:DeregisterTargets'
                  - 'elasticloadbalancing:RegisterTargets'
                  - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
                  - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                  - 'ec2:Describe*'
                  - 'ecs:Describe*'
                  - 'ecs:List*'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f0458231-9eab-481f-831f-b8b65071c264
  ECSService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - ALBListener
    Properties:
      ServiceName: nginx-proxy
      DesiredCount: !Ref DesiredCapacity
      LoadBalancers:
        - ContainerName: nginx-proxy
          ContainerPort: !Ref WebServerPort
        - TargetGroupArn: !Ref ECSTG
    Metadata:
      'AWS::CloudFormation::Designer':
        id: eb45abae-6d1b-476a-a3d6-091e5ea6223b
  ECSTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Join 
        - '-'
        - - !Ref 'AWS::StackName'
          - nginx-proxy
      ContainerDefinitions:
        - Name: nginx-proxy
          Cpu: '0'
          Essential: 'true'
          Image: 'codesuki/ecs-nginx-proxy:latest'
          Memory: '200'
          Environment:
            - Name: ECS_GEN_CLUSTER
              Value: !Join 
                - '-'
                - - !Ref 'AWS::StackName'
                  - ECS
            - Name: ECS_GEN_REGION
              Value: us-east-1
          PortMappings:
            - HostPort: 80
              ContainerPort: 80
      Volumes: []
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 66f56535-0c31-4557-92c8-11d995a949de
Outputs:
  ECSCluster:
    Value: !Ref ECSCluster
  ECSService:
    Value: !Ref ECSService
  FileSystemID:
    Description: File system ID
    Value: !Ref FileSystem
Metadata:
  'AWS::CloudFormation::Designer':
    13ed1c66-9990-4682-8605-88cba4cb6d73:
      size:
        width: 60
        height: 60
      position:
        x: 240
        'y': 270
      z: 1
      embeds: []
      isassociatedwith:
        - d86a3e51-ef74-4f2a-9591-8c547b7bee6c
      dependson:
        - 920a3df0-cd9d-4073-b4db-2f440dbfcfe9
        - 2ed00e7d-0643-414e-9515-12c0c2daa98f
        - c04539ff-c5d6-42a5-97e0-11ea9789d17e
        - 0c546c62-70f2-4006-901d-c994ce76acb5
    0c546c62-70f2-4006-901d-c994ce76acb5:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 410
      z: 1
      embeds: []
      isassociatedwith:
        - f1bd72a6-f978-4bc8-8d41-8d75019b08f9
        - 4ef0e39a-7233-4074-bcda-34f0a53e090e
    da5818f9-d8ae-4169-8e23-0904ed772b92:
      size:
        width: 60
        height: 60
      position:
        x: -160
        'y': 170
      z: 1
      embeds: []
      isassociatedwith:
        - 1efd447b-6f38-4922-916b-5a6c091020f2
      dependson:
        - f0458231-9eab-481f-831f-b8b65071c264
    4ef0e39a-7233-4074-bcda-34f0a53e090e:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 520
      z: 1
      embeds: []
    d86a3e51-ef74-4f2a-9591-8c547b7bee6c:
      size:
        width: 60
        height: 60
      position:
        x: 380
        'y': 270
      z: 1
      embeds: []
      isassociatedwith:
        - df096fd4-f28d-464a-b313-c6a938d0157f
    f1bd72a6-f978-4bc8-8d41-8d75019b08f9:
      size:
        width: 60
        height: 60
      position:
        x: 500
        'y': 270
      z: 1
      embeds: []
    1efd447b-6f38-4922-916b-5a6c091020f2:
      size:
        width: 60
        height: 60
      position:
        x: -370
        'y': 270
      z: 1
      embeds: []
      isassociatedwith:
        - 800ecf14-d4ac-4222-8d5c-6b3e518a0440
    b2ddf892-e9a3-49e5-a95b-0cb39f3cb91a:
      size:
        width: 60
        height: 60
      position:
        x: -270
        'y': 270
      z: 1
      embeds: []
      dependson:
        - 1efd447b-6f38-4922-916b-5a6c091020f2
    b7f45d98-4116-46e8-9c22-bb003a831fd2:
      size:
        width: 60
        height: 60
      position:
        x: -160
        'y': 340
      z: 1
      embeds: []
      dependson:
        - da5818f9-d8ae-4169-8e23-0904ed772b92
    eb45abae-6d1b-476a-a3d6-091e5ea6223b:
      size:
        width: 60
        height: 60
      position:
        x: 30
        'y': 270
      z: 1
      embeds: []
      isassociatedwith:
        - 66f56535-0c31-4557-92c8-11d995a949de
        - bafee841-66f0-4839-8ef6-87599249f62f
        - f0458231-9eab-481f-831f-b8b65071c264
        - b2ddf892-e9a3-49e5-a95b-0cb39f3cb91a
      dependson:
        - da5818f9-d8ae-4169-8e23-0904ed772b92
    df096fd4-f28d-464a-b313-c6a938d0157f:
      size:
        width: 60
        height: 60
      position:
        x: 380
        'y': 390
      z: 1
      embeds: []
    aefca27b-ad7c-4b8d-8ed0-5680154ae9a1:
      size:
        width: 60
        height: 60
      position:
        x: 380
        'y': 70
      z: 1
      embeds: []
    b34eab39-db6c-481b-9ede-c969e13b4c41:
      size:
        width: 60
        height: 60
      position:
        x: 380
        'y': 170
      z: 1
      embeds: []
      isassociatedwith:
        - aefca27b-ad7c-4b8d-8ed0-5680154ae9a1
    f0458231-9eab-481f-831f-b8b65071c264:
      size:
        width: 60
        height: 60
      position:
        x: 30
        'y': 170
      z: 1
      embeds: []
    66f56535-0c31-4557-92c8-11d995a949de:
      size:
        width: 60
        height: 60
      position:
        x: 150
        'y': 270
      z: 1
      embeds: []
    800ecf14-d4ac-4222-8d5c-6b3e518a0440:
      size:
        width: 60
        height: 60
      position:
        x: -370
        'y': 390
      z: 1
      embeds: []
    bafee841-66f0-4839-8ef6-87599249f62f:
      size:
        width: 60
        height: 60
      position:
        x: -60
        'y': 340
      z: 1
      embeds: []
    920a3df0-cd9d-4073-b4db-2f440dbfcfe9:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 320
      z: 1
      embeds: []
      isassociatedwith:
        - f1bd72a6-f978-4bc8-8d41-8d75019b08f9
        - 4ef0e39a-7233-4074-bcda-34f0a53e090e
    2ed00e7d-0643-414e-9515-12c0c2daa98f:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 230
      z: 1
      embeds: []
      isassociatedwith:
        - f1bd72a6-f978-4bc8-8d41-8d75019b08f9
        - 4ef0e39a-7233-4074-bcda-34f0a53e090e
    c04539ff-c5d6-42a5-97e0-11ea9789d17e:
      size:
        width: 60
        height: 60
      position:
        x: 620
        'y': 140
      z: 1
      embeds: []
      isassociatedwith:
        - f1bd72a6-f978-4bc8-8d41-8d75019b08f9
        - 4ef0e39a-7233-4074-bcda-34f0a53e090e
